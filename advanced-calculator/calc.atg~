import java.lang.Exception;

COMPILER AdvCalc

	Interpreter aci;

	public void setInterpreter(Interpreter aci) {
		this.aci = aci;
	}

CHARACTERS
	digit = "0123456789".
	letter = 'A'..'Z' + 'a'..'z'.

TOKENS
	number = digit {digit} [ '.' digit {digit} ].
	ident = letter {digit | letter }.

IGNORE '\n' + '\r' + '\t'

PRODUCTIONS
	AdvCalc 								(. ASTExp exp; .)
	= { CExp<out exp>						(. try {
											   		ASTExp res = aci.eval(exp);
													System.out.println(" " + res);
											   } catch (Exception e) {
													System.err.println(" Error: " + e.getMessage());
												 }
											.)
	} EOF
	.
	CExp<out ASTExp v> 						(. v = null; .)
	= Def | Exp.

	Def = "def" ident ( "(" ParamNames ")" | ) "=" Exp.
	ParamNames = ident { "," ident }.
	Exp = T { ( "+" T | ";" T ) }.
	T = U { ( "*" U | "/" U | "%" U ) }.
	U = ("-" F | F ).
	F = number | VarOrFunc | IFExp | "(" Exp ")" .
	VarOrFunc = ident ( "(" Params ")" | ).
	Params = Exp { "," Exp }.
	IFExp = "if" ExpL "then" Exp "else" Exp.
	ExpL = Exp OpRel Exp.
	OpRel = ">" | ">=" | "<" | "&<=" | "=" | "!=".

END AdvCalc.
